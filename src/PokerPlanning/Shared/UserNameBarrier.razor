@using PokerPlanning.Models;
@using PokerPlanning.Services;


@if (Loading)
{
    <i>Loading...</i>
}

@if (!Loading)
{
    @if (barrierActive)
    {
        <h3>Qual o seu nome de exibição?</h3>
        <EditForm Model="userNameForm" OnSubmit="@Submit">
            <InputText @bind-Value="userNameForm.UserName" />
            <button type="submit">Salvar</button>
        </EditForm>
    }

    @if (!barrierActive)
    {
        @Content
    }
}

@code {
    [Parameter] public RenderFragment? Content { get; set; }
    [Inject] PlayerService? playerService { get; set; }


    UserNameForm userNameForm = new();
    bool barrierActive = true;
    bool Loading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (playerService is null)
                return;
            userNameForm.UserName = (await playerService.GetUserName()) ?? string.Empty;
            barrierActive = string.IsNullOrWhiteSpace(userNameForm.UserName);
            Loading = false;
            StateHasChanged();
        }
    }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private async Task Submit()
    {
        if (string.IsNullOrWhiteSpace(userNameForm.UserName))
            return;
        if (playerService is null)
            return;
        await playerService.SetUserName(userNameForm.UserName.Trim());
        barrierActive = false;
    }

}
